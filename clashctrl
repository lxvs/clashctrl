#!/bin/bash
set -o nounset

list_help () {
cat <<EOF
usage: clashctrl list

List all proxies.
EOF
}

list_op () {
    if test $# -gt 0
    then
        >&2 printf "error: too many arguments\n"
        return 1
    fi
    curl -sS -X GET \
        -H "Content-Type: application/json" \
        "127.0.0.1:9090/proxies"
}

get_help () {
cat <<EOF
usage: clashctrl get [<selector>]

Get current <selector> proxy, <selector> is GLOBAL if not specified.
EOF
}

get_op () {
    local selector
    case $# in
    0)
        selector="GLOBAL"
        ;;
    1)
        selector="$1"
        ;;
    *)
        >&2 printf "error: too many arguments\n"
        return 1
        ;;
    esac
    curl -sS -X GET \
        -H "Content-Type: application/json" \
        "127.0.0.1:9090/proxies/$selector"
}

switch_help () {
cat <<EOF
usage: clashctrl switch <proxy>

Switch current GLOBAL proxy to <proxy>.
EOF
}

switch_op () {
    local proxy
    case $# in
    1)
        proxy="$1"
        ;;
    *)
        >&2 printf "error: 'switch' takes 1 argument.\n"
        return 1
        ;;
    esac
    curl -sS -X PUT \
        -H "Content-Type: application/json" \
        127.0.0.1:9090/proxies/GLOBAL \
        -d "{\"name\": \"$proxy\"}"
}

Version () {
cat <<EOF
clashctrl $version
$ghlink
EOF
}

Help () {
cat <<EOF
usage:
    clashctrl <operation> [<argument> ...]
    clashctrl -h | --help
    clashctrl -v | --version

operation:
    switch          switch current GLOBAL proxy
    get             get current GLOBAL proxy
    list            list all proxies
    curl            (yet to implement) custom curl

Use clashctrl <operation> --help for more about <operation>.
EOF
}

TryToHelp () {
    while test $# -ge 1
    do
        case "$1" in
        -h|--help)
            ${op}_help
            exit 0
            ;;
        *)
            shift
            ;;
        esac
    done
}

main () {
    local op
    readonly version='0.0.1'
    readonly ghlink='https://github.com/lxvs/clashctrl'
    if test $# -eq 0
    then
        Help
        exit 0
    fi
    op="$1"
    shift
    case "$op" in
    -v|--version|version)
        Version
        exit 0
        ;;
    -h|--help|help)
        Help
        exit 0
        ;;
    switch|get|list)
        TryToHelp "$@"
        ${op}_op "$@"
        ;;
    *)
        >&2 printf "error: invalid operation: %s\n" "$op"
        exit 1
        ;;
    esac
}

main "$@"
